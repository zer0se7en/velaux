{"version":3,"file":"module.js","mappings":"yFAAAA,EAAOC,QAAUC,C,UCAjBF,EAAOC,QAAUE,C,UCAjBH,EAAOC,QAAUG,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaP,QAGrB,IAAID,EAASK,EAAyBE,GAAY,CAGjDN,QAAS,CAAC,GAOX,OAHAS,EAAoBH,GAAUP,EAAQA,EAAOC,QAASK,GAG/CN,EAAOC,OACf,CCrBAK,EAAoBK,EAAI,CAACV,EAASW,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEb,EAASY,IAC5EE,OAAOC,eAAef,EAASY,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAKvB,IACH,oBAAXwB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAef,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAef,EAAS,aAAc,CAAE0B,OAAO,GAAO,E,wECFvD,MAAMC,UAAYC,EAAAA,cACvBC,SACE,OAAO,gBAACC,MAAAA,CAAIC,UAAU,kBAAiB,+BACzC,E,sICEK,MA+CDC,G,EAAwB,UAAOC,EAAkBC,GACrD,IAKEC,OAAOC,SAASC,QAClB,CAAE,MAAOC,GACPC,QAAQC,MAAM,kCAAmCF,EACnD,CACF,E,yLAVqCL,EAAkBC,G,iCAAzB,I,ICnDvB,MAAMO,GAAS,IAAIC,EAAAA,eAAoBC,YAAYhB,GAAKiB,cAAc,CAC3EC,MAAO,gBACPC,KAAM,MACNC,KDCuB,EAAGN,aAC1B,MAAM,QAAEO,EAAO,SAAEC,GAAaR,EAAOS,KAErC,OACE,gBAACpB,MAAAA,CAAIC,UAAU,iBACb,gBAACD,MAAAA,KAEC,gBAACA,MAAAA,KAAI,qBACHkB,GACA,gCACE,gBAAClB,MAAAA,KAAI,wCACL,gBAACqB,EAAAA,OAAMA,CACLC,KAAK,UACLC,QAAS,IACPrB,EAAsBS,EAAOS,KAAKI,GAAI,CACpCN,SAAS,EACTC,cAGL,kBAOJD,GACC,gCACE,gBAAClB,MAAAA,KAAI,oCACL,gBAACqB,EAAAA,OAAMA,CACLC,KAAK,YACLC,QAAS,IACPrB,EAAsBS,EAAOS,KAAKI,GAAI,CACpCN,SAAS,EACTC,cAGL,sBCrCXK,GAAI,iB","sources":["webpack:///external amd \"@velaux/data\"","webpack:///external amd \"@velaux/ui\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/App/index.tsx","webpack:///./components/AppConfig/index.tsx","webpack:///./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__112__;","module.exports = __WEBPACK_EXTERNAL_MODULE__928__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as React from 'react';\nimport { AppRootProps } from '@velaux/data';\n\nexport class App extends React.PureComponent<AppRootProps> {\n  render() {\n    return <div className=\"page-container\">Hello KubeVela Plugin Words!</div>;\n  }\n}\n","import * as React from 'react';\nimport { Button } from '@velaux/ui';\nimport { PluginConfigPageProps, AppPluginMeta, PluginMeta } from '@velaux/data';\n\nexport type AppPluginSettings = {};\n\nexport interface AppConfigProps extends PluginConfigPageProps<AppPluginMeta<AppPluginSettings>> {}\n\nexport const AppConfig = ({ plugin }: AppConfigProps) => {\n  const { enabled, jsonData } = plugin.meta;\n\n  return (\n    <div className=\"gf-form-group\">\n      <div>\n        {/* Enable the plugin */}\n        <div>Enable / Disable</div>\n        {!enabled && (\n          <>\n            <div>The plugin is currently not enabled.</div>\n            <Button\n              type=\"primary\"\n              onClick={() =>\n                updatePluginAndReload(plugin.meta.id, {\n                  enabled: true,\n                  jsonData,\n                })\n              }\n            >\n              Enable plugin\n            </Button>\n          </>\n        )}\n\n        {/* Disable the plugin */}\n        {enabled && (\n          <>\n            <div>The plugin is currently enabled.</div>\n            <Button\n              type=\"secondary\"\n              onClick={() =>\n                updatePluginAndReload(plugin.meta.id, {\n                  enabled: false,\n                  jsonData,\n                })\n              }\n            >\n              Disable plugin\n            </Button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst updatePluginAndReload = async (pluginId: string, data: Partial<PluginMeta>) => {\n  try {\n    //await updatePlugin(pluginId, data);\n\n    // Reloading the page as the changes made here wouldn't be propagated to the actual plugin otherwise.\n    // This is not ideal, however unfortunately currently there is no supported way for updating the plugin state.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n\n// export const updatePlugin = async (pluginId: string, data: Partial<PluginMeta>) => {\n//   const response = getBackendSrv().fetch({\n//     url: `/api/plugins/${pluginId}/settings`,\n//     method: 'POST',\n//     data,\n//   });\n//   return lastValueFrom(response);\n// };\n","import { AppPagePlugin } from '@velaux/data';\nimport { App } from './components/App';\nimport { AppConfig } from './components/AppConfig';\n\nexport const plugin = new AppPagePlugin<{}>().setRootPage(App).addConfigPage({\n  title: 'Configuration',\n  icon: 'cog',\n  body: AppConfig,\n  id: 'configuration',\n});\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__112__","__WEBPACK_EXTERNAL_MODULE__928__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","App","React","render","div","className","updatePluginAndReload","pluginId","data","window","location","reload","e","console","error","plugin","AppPagePlugin","setRootPage","addConfigPage","title","icon","body","enabled","jsonData","meta","Button","type","onClick","id"],"sourceRoot":""}